server:
  port: 8020

# Nacos registry address
dubbo:
  scan:
    base-packages: com.xc.service.impl
  application:
#    name: dubbo-xc-service
    qos:
      enable: false
  registry:
#   The Spring Cloud Dubbo's registry extension
    address: spring-cloud://localhost
#  registries:
#    registry1:
#        address: spring-cloud://localhost
#        retries: 0
        #?namespace=cbe53515-f2ac-4ce1-bf54-c3fd9259a1da   #nacos://127.0.0.1:8848
    #    parameters[a]: bb
      #  address: nacos://127.0.0.1:8848
   # group: DEV-GROUP
  provider:
    timeout: 10000
    retries: 1
    threads: 500
  protocol:
#    host: ${PROTOCOLHOST}       #用于多网卡时指定IP，要不然集群会有问题
    name: dubbo
    port: ${PROTOCOL_PORT:-1}
  cloud:
    subscribed-services:  ${spring.application.name}


spring:
#  application:
#    name: xc-service
  cloud:
    nacos:
      discovery:
        server-addr: ${spring.cloud.nacos.config.server-addr}
        ip: ${NACOS_REGIST_IP:}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
    sentinel:
      enabled: true
      eager: false
      transport:
        dashboard: ${SENTINEL_REGIST_IP:127.0.0.1:8088}
        clientIp: ${SENTINEL_CLIENT_IP:}
      datasource:
        ds1:
          nacos:
            ruleType: flow
            server-addr: ${spring.cloud.nacos.config.server-addr}
            dataId: dubbo-sentinel-json
            groupId: DEFAULT_GROUP
    inetutils:
      preferred-networks: ${spring.networks:}
    bus:
      id: ${spring.application.name}:${server.port}
    stream:
      bindings:
        springCloudBusInput:
          destination: springCloudBus
        springCloudBusOutput:
          destination: springCloudBus
        output:
          group: xc-binder-group #group在rocketMq中不起作用，DefaultMQProducer以destination为producerGroup
          destination: xc-binder-topic
          content-type: application/json

      rocketmq:
         binder:
           nameServer: ${ROCKET_MQ_HOST:127.0.0.1:9876}
         bindings:
           springCloudBusOutput:
             producer:
                send-message-timeout: 30000
           output:
             producer:
               sendMessageTimeout: 30000
               sync: true

  datasource:
# pgsql
        url: jdbc:postgresql://${SQL_HOST:127.0.0.1}:${SQL_PORT:5432}/dbxc?autoReconnect=true
        username: ${SQL_USERNAME:postgres}
        password: ${SQL_PASSWORD:123456}
        driverClassName: org.postgresql.Driver
# pgsql

# mysql8.0
#        url: jdbc:mysql://${SQL_HOST:127.0.0.1}:${SQL_PORT:3306}/dbxc?autoReconnect=true&serverTimezone=UTC
#        username: ${SQL_USERNAME:root}
#        password: ${SQL_PASSWORD:123456}
#        driverClassName: com.mysql.jdbc.Driver
# mysql8.0

#        type: com.alibaba.druid.pool.DruidDataSource
#        initialSize: 5
#        minIdle: 5
#        maxActive: 50
#        maxWait: 60000
#        timeBetweenEvictionRunsMillis: 60000
#        minEvictableIdleTimeMillis: 300000
#        validationQuery: SELECT 1
#        testWhileIdle: true
#        testOnBorrow: false
#        testOnReturn: false
#        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#        filters: stat,wall,log4j
#        poolPreparedStatements: true
#        maxPoolPreparedStatementPerConnectionSize: 20

        type: com.zaxxer.hikari.HikariDataSource
        hikari:
            minimum-idle: 5
            maximum-pool-size: 50
            auto-commit: true
            idle-timeout: 30000
            pool-name: DatebookHikariCP
            max-lifetime: 1800000
            connection-timeout: 30000
            connection-test-query: SELECT 1


  jpa:
      database: POSTGRESQL
#      database: MYSQL  # mysql 8.0
      show-sql: true
      properties:
        hibernate.dialect: com.xc.util.JSONBPostgreSQLDialect
#        hibernate.dialect: org.hibernate.dialect.MySQL8Dialect  #mysql8
#        hibernate.default_catalog: 'dbxc'  #mysql 8.0以上版本使用,否则查询不到表

        hibernate.temp.use_jdbc_metadata_defaults: false
        hibernate.hbm2ddl.auto: update  #validate update
        hibernate.cache.use_second_level_cache: true
        hibernate.cache.use_query_cache: true
        hibernate.generate_statistics: true
        hibernate.enable_lazy_load_no_trans: true #开启懒加载的，但有问题暂未处理
        hibernate.cache.region.factory_class: org.apache.ignite.cache.hibernate.HibernateRegionFactory
        hibernate.org.apache.ignite.hibernate.ignite_instance_name: service-cache-grid
        hibernate.org.apache.ignite.hibernate.default_access_type: TRANSACTIONAL
        hibernate.connection.release_mode: on_close
        javax.persistence.sharedCache.mode: ENABLE_SELECTIVE
        org.apache.ignite.hibernate.ignite_instance_name: service-cache-grid
        org.apache.ignite.hibernate.grid_config: ${xc.ignite.config:applicationContext-ignite.xml}
        #http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=applicationContext-ignite.xml&group=DEFAULT_GROUP


##请求和响应GZIP压缩支持
#feign:
#  httpclient:
#    enabled: false
#  okhttp:
#    enabled: true
#  compression:
#    request:
#      enabled: true
#      mime-types: text/xml,application/xml,application/json
#      min-request-size: 1
#    response:
#      enabled: true


jwt:
  expire: 2880
  rsa-secret: xc-service-password

xc:
  quartz:
    #ID设置为自动获取 每一个必须不同 （所有调度器实例中是唯一的）
    org.quartz.scheduler.instanceId: AUTO
    #指定调度程序的主线程是否应该是守护线程
    org.quartz.scheduler.makeSchedulerThreadDaemon: true
    #ThreadPool实现的类名
    org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
    #ThreadPool配置线程守护进程
    org.quartz.threadPool.makeThreadsDaemons: true
    #线程数量
    org.quartz.threadPool.threadCount: 20
    #线程优先级
    org.quartz.threadPool.threadPriority: 5
    #数据保存方式为持久化
    org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
    #StdJDBCDelegate说明支持集群 TODO mysql8 : org.quartz.impl.jdbcjobstore.StdJDBCDelegate
    org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
    #quartz内部表的前缀
    org.quartz.jobStore.tablePrefix: QRTZ_
    #是否加入集群
    org.quartz.jobStore.isClustered: true
    #分布式节点有效性检查时间
    org.quartz.jobStore.clusterCheckinInterval: 10000
    #容许的最大作业延长时间
    org.quartz.jobStore.misfireThreshold: 25000
